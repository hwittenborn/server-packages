name: Deploy packages
on: {"push", "pull_request"}
env: {"DEBIAN_FRONTEND": "noninteractive"}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone makedeb
        run: |
          git clone "${GITHUB_SERVER_URL}/makedeb/makedeb"
          cd makedeb/
          git checkout stable

      - name: Install needed dependencies
        working-directory: makedeb/
        run: |                                       
          # Prevent the 'ci-utils' package from being installed.
          curl() { true ; }
          export -f curl
          .drone/scripts/install-deps.sh
          sudo apt install dpkg-dev apt-utils gzip -y

      - name: Build makedeb
        working-directory: makedeb/
        run: release_type=stable pkgname=makedeb .drone/scripts/build-native.sh

      - name: Install makedeb
        working-directory: makedeb/
        run: |
          sudo apt install $(find ./ -maxdepth 1 -name '*.deb') -y
          
      - name: Build packages       
        run: |
          mkdir debs/
          git clone "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}"
          cd server-packages/
          git checkout main
          
          cd packages/
          for i in *; do
            cd "${i}/"
            makedeb -s --no-confirm
            cp *.deb ../../../debs/
            cd ../
          done
          
          cd ../

      - name: Deploy packages
        run : |
          git restore ./
          git checkout deploy
          rm * -rf

          cp ../debs/* ./
          dpkg-scanpackages --multiversion . > Packages
          gzip -k -f Packages
          apt-ftparchive release . > Release

          git add ./
          git commit -m "Updated packages"
          git push
